service: serverless-sarambabot
frameworkVersion: '2'
custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: node14
    define: {}
    platform: node
plugins:
  - serverless-esbuild
  - serverless-iam-roles-per-function       
  - serverless-offline
provider:
  stage: dev
  region: us-east-1
  name: aws
  runtime: nodejs14.x
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true        
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    REGION: ${self:provider.region}
    TWEETS_TABLE: sb_tweets_test
    SERVICE_NAME: ${self:service.name}
    STAGE: ${self:provider.stage}
    LAMBDA_SEND_TWEETS_TO_DISCORD: ${self:service.name}-${self:provider.stage}-sendTweetsToDiscord
  lambdaHashingVersion: '20201221'
  versionFunctions: true
package:
  individually: true
functions:
  sendTweetsToDiscord:
    handler: src/functions/sendTweetsToDiscord/handler.main
    memorySize: 128 # MB
    timeout: 5 # seconds
    iamRoleStatements:
      - Effect: Allow
        Action:
        - dynamodb:UpdateItem
        Resource:
          Fn::GetAtt:
            - TweetsDynamoDBTable
            - Arn
  # TODO: set up a cronjob to run this function every X mins
  pollTwitterFeed:
    handler: src/functions/pollTwitterFeed/handler.main
    memorySize: 128 # MB
    timeout: 5 # seconds
    events:
      - schedule:
          rate: rate(1 minute)
          enabled: true
      - http:
          path: pollTwitterFeed
          method: GET
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
        - dynamodb:PutItem
        - dynamodb:Query
        Resource:
          Fn::GetAtt:
            - TweetsDynamoDBTable
            - Arn
      - Effect: Allow
        Action:
        - dynamodb:PutItem
        - dynamodb:Query
        Resource:
          - Fn::GetAtt:
              - TweetsDynamoDBTable
              - Arn
          - Fn::Join:
              - /
              - - Fn::GetAtt:
                    - TweetsDynamoDBTable
                    - Arn
                - index
                - TweetSent-index
      - Effect: Allow
        Action:
        - lambda:InvokeFunction
        Resource: '*'
  # challengeResponseCheck:
  #   handler: src/functions/challengeResponseCheck/handler.main
  #   memorySize: 128 # MB
  #   timeout: 5 # seconds
  #   events:
  #     - http:
  #         path: sendTweetsToDiscord
  #         method: GET
  #         cors: true
resources:
  - ${file(resources/dynamodb.yml)}