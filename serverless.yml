service: sls-youtube-backup

frameworkVersion: "2"

provider:
  # use dev if no stage is specified
  stage: ${opt:stage, self:custom.defaultStage}
  region: us-east-1
  name: aws
  runtime: nodejs14.x
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    REGION: ${self:provider.region}
    SERVICE_NAME: ${self:service}
    STAGE: ${self:provider.stage}
  lambdaHashingVersion: "20201221"
  versionFunctions: true

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-lift

custom:
  defaultStage: dev
  enableCron:
    dev: false
    production: true
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: node14
    define: {}
    platform: node

package:
  individually: true

constructs:
  video-backup-queue:
    type: queue
    worker:
      handler: src/functions/queuePlaylistBackup/handler.main

functions:
  queuePlaylistBackup:
    handler: src/functions/queuePlaylistBackup/handler.main
    environment:
      SQS_QUEUE_URL: ${construct:video-backup-queue.queueUrl}
    memorySize: 128 # MB
    timeout: 5 # seconds
    # TODO: remove this event
    events:
      - http:
          path: queuePlaylistBackup
          method: POST
          cors: true

  backupVideos:
    handler: src/functions/backupVideos/handler.main
    environment:
      SQS_QUEUE_URL: ${construct:video-backup-queue.queueUrl}
    memorySize: 128 # MB
    timeout: 5 # seconds
    # TODO: might be a better way to do this
    events:
      - schedule:
          rate: rate(1 minute)
          # enable the cronjob for production only
          enabled: ${self:custom.enableCron.${self:provider.stage}, false}
